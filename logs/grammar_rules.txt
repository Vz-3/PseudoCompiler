<program>               -> <declarations> <statements>
<declarations>          -> <declaration> <declarations> | ε
<declaration>           -> IDENTIFIER : <type>
<type>                  -> KEYWORD_INT | KEYWORD_DOUBLE | IDENTIFIER
<statements>            -> <statement> <statements> | ε
<statement>             -> <assignment_statement> | <output_statement> | <if_statement> | ε
<assignment_statement>  -> IDENTIFIER := <expression>
<output_statement>      -> KEYWORD_OUTPUT << <output_params>
<output_params>         -> <expression> | LITERAL_STRING
<if_statement>          -> KEYWORD_IF (<expression>) <statement>
<expression>            -> <simple_expression>
<simple_expression>     -> <term> | <simple_expression> OP_ARITHMETIC_PLUS <term> | <simple_expression> OP_ARITHMETIC_MINUS <term>
<term>                  -> <factor> | <term> OP_ARITHMETIC_MULTIPLY <factor> | <term> OP_ARITHMETIC_DIVIDE <factor>
<factor>                -> IDENTIFIER | LITERAL_INTEGER | LITERAL_DOUBLE | ( <expression> );
